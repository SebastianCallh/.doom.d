#+TITLE: Doom configuration
#+AUTHOR: Sebastian Callh
#+EMAIL: sebastian.callh@gmail.com
#+PROPERTY: header-args:elisp :tangle yes :exports code

* Personal Doom Configuration
This config file is intended to be used with [[https://github.com/hlissner/doom-emacs][Doom emacs]]. Since Doom is very batteries-included, this file mostly contains personal touches.
Using the [[file:init.el::literate][literate module]] this file is tangled on save and used instead of a ~config.el~ file.

* Personal
#+begin_src elisp
(setq auth-sources '("~/.authinfo"))
(setq user-full-name "Sebastian Callh"
      user-mail-address "sebastian.callh@gmail.com")
#+end_src

* Localisation
#+begin_src elisp
(use-package! flyspell
  :init (setq ispell-dictionary "en_GB"))
(setq system-time-locale "C")
#+end_src

* Custom keybindings
#+begin_src elisp
(defun kill-current-buffer ()
  (interactive)
  (kill-buffer (current-buffer)))

(global-set-key (kbd "C-w") 'backward-kill-word)
(global-set-key (kbd "C-x k") 'kill-current-buffer)
(global-set-key (kbd "C-x C-k") 'kill-region)
(global-set-key (kbd "M-o") 'other-window)
(global-set-key (kbd "M-;") 'comment-dwim)
#+end_src

* Aesthetics
** Dashboard
#+begin_src elisp
(setq fancy-splash-image "~/.doom.d/images/lambda250.png")
#+end_src

** Theme
#+begin_src elisp
(setq doom-theme 'doom-miramare)
#+end_src

** Font
Use ~mixed-pitch~ to have separate fonts in code blocks and in prose. The Vollkorn typeface is available at [[http://vollkorn-typeface.com/][their website]].

#+begin_src elisp
(use-package! mixed-pitch
  :hook
  (org-mode . mixed-pitch-mode))

(setq doom-font (font-spec :family "Fira Code" :size 22)
      doom-variable-pitch-font (font-spec :family "Vollkorn")
      doom-unicode-font (font-spec :family "Fira Code")
      doom-big-font (font-spec :family "Fira Code" :size 28))
#+end_src

** Modeline
Currently running with Doom modeline.
#+begin_src elisp
(use-package! doom-modeline
  :config
  (setq doom-modeline-buffer-file-name-style 'buffer-name)
  (setq doom-modeline-buffer-encoding nil))
#+end_src

* Performance
  Also disable some packages in [[file:packages.el::;: Pemoved for performance reason][packages.el]].
#+begin_src elisp
(setq display-line-numbers-type 'nil)
#+end_src

* Org
#+begin_src elisp
(use-package! org
  :init (setq org-directory "~/Dropbox/org")
  :config
  (setq org-startup-folded t)
  (setq org-hide-emphasis-markers t)
  (setq org-ellipsis '"…")
  (setq org-superstar-headline-bullets-list '("❍"))

  (custom-set-faces

   '(org-level-1 ((t (:inherit outline-1 :height 1.2))))
   '(org-level-2 ((t (:inherit outline-2 :height 1.15))))
   '(org-level-3 ((t (:inherit outline-3 :height 1.1))))
   '(org-level-4 ((t (:inherit outline-4 :height 1.0))))
   '(org-level-5 ((t (:inherit outline-5 :height 1.0)))))
  
  (cl-defmethod jupyter-org--insert-result (_req context result)
    (let ((str
           (org-element-interpret-data
            (jupyter-org--wrap-result-maybe
             context (if (jupyter-org--stream-result-p result)
                         (thread-last result
                           jupyter-org-strip-last-newline
                           jupyter-org-scalar)
                       result)))))
      (if (< (length str) 10000)
          (insert str)
        (insert (format ": Output truncated, original length was %d" (length str)))))
    (when (/= (point) (line-beginning-position))
      ;; Org objects such as file links do not have a newline added when
      ;; converting to their string representation by
      ;; `org-element-interpret-data' so insert one in these cases.
      (insert "\n"))))
#+end_src

** Org roam
#+begin_src elisp
(use-package! org-roam
  :hook (after-init . org-roam-mode)
  :custom(org-roam-directory (concat org-directory "/roam")))

(use-package! company-org-roam
* Packages
** Dired
Regular Dired mode shows so much stuff and seeing my name on folders twice really clutters the screen. Hence we turn off detail mode by default.

#+begin_src elisp
(use-package! dired
  :config
  (add-hook 'dired-mode-hook 'dired-hide-details-mode))
#+end_src

* Packages
** Avy
#+begin_src elisp
(use-package! avy
  :config
  (setq avy-all-windows t)
  (global-set-key (kbd "C-:") 'avy-goto-char))
#+end_src

** Tramp
We want to avoid [[https://www.reddit.com/r/emacs/comments/320cvb/projectile_slows_tramp_mode_to_a_crawl_is_there_a/][Projectile slowing down Tramp]], and we use some of the [[https://www.gnu.org/software/emacs/manual/html_node/tramp/Frequently-Asked-Questions.html][tricks in the Emacs manual]].
#+begin_src elisp
(after! tramp
  :config
  (setq recentf-auto-cleanup 'never)
  (setq projectile-mode-line "Projectile")
  (setq tramp-completion-reread-directory-timeout nil)
  (setq tramp-verbose 1)
  (setq vc-ignore-dir-regexp
        (format "\\(%s\\)\\|\\(%s\\)"
                vc-ignore-dir-regexp
                tramp-file-name-regexp)))
#+end_src

** Projectile
Solves the [[https://github.com/bbatsov/projectile/issues/657][issue]] where ~Projectile~ lags over ~Tramp~.
#+begin_src elisp
(use-package! projectile
  :config
  (setq projectile-mode-line "Projectile"))
#+end_src

# **  Company-posframe
# [[*Font][Mixed pitch]] allows different fonts in org mode for prose and code, however, this doesn't interact super great with company. [[https://github.com/tumashu/company-posframe/][Company-posframe]] solves this. [[https://github.com/sebastiencs/company-box][Company-box]] looks quite a bit nicer with icons and docstring-popup, but it crashes when used in ~emacs-jupyter~, which is super sad. Added in [[file:packages.el::package! company-posframe][package.el]].

# #+begin_src elisp
# (use-package! company-posframe
#   :hook (company-mode . company-posframe-mode))
# #+end_src

**  Company-box
[[https://github.com/sebastiencs/company-box][Company-box]] looks quite a bit nicer with icons and docstring-popup, but has crashes at times when used in ~emacs-jupyter~, which is super sad. Added in [[file:packages.el::package! company-posframe][package.el]].
#+begin_src elisp
(use-package! company-posframe
  :hook (company-mode . company-box-mode))
#+end_src

**  Undo-fu
I think there might be an issue with ~undo-fu-session~ since it sometimes outputs =Undo-Fu-Session discarding undo data: file length mismatch=. I am not sure if this affects performance but I don't really care if undo is bounded by a session, so it is disabled here.
#+begin_src elisp
(remove-hook 'undo-fu-mode-hook #'global-undo-fu-session-mode)
#+end_src

* Programming
** Data science
*** Ess
Unfortunately [[https://github.com/gjkerns/ob-julia/blob/master/ob-julia-doc.org][needed]] for ~ob-julia~.
#+begin_src elisp
(after! ess
  (setq inferior-julia-program "/usr/local/bin/julia"))
#+end_src

*** Julia
Config can be in the Julia module [[https://github.com/hlissner/doom-emacs/blob/develop/modules/lang/julia/README.org][README]]. ~julia-lsp~ installed in [[file:packages.el::package! lsp-julia :recipe (:host github :repo "non-jedi/lsp-julia")][package.el]].
#+begin_src elisp
(setq lsp-julia-default-environment "~/.julia/environments/v1.5")
(setq lsp-julia-package-dir nil)
;; (setq lsp-julia-package-dir "~/.emacs.d/.local/straight/repos/lsp-julia/languageserver")
(setq lsp-enable-folding t)
#+end_src
*** EIN
For some reason undo is disabled by default.
#+begin_src elisp
(use-package! ein
  :config
  (setq ein:worksheet-enable-undo t))
#+end_src
