#+TITLE: Doom configuration
#+AUTHOR: Sebastian Callh
#+EMAIL: sebastian.callh@gmail.com
#+PROPERTY: header-args:emacs-lisp :tangle yes :exports code :mkdirp yes

* Personal Doom Configuration
This config file is intended to be used with [[https://github.com/hlissner/doom-emacs][Doom emacs]]. Since Doom is very batteries-included, this file mostly contains personal touches.
Using the [[file:init.el::literate][literate module]] this file is tangled on save and used instead of a ~config.el~ file.

** Personal
#+begin_src emacs-lisp
(setq auth-sources '("~/.authinfo"))
(setq user-full-name "Sebastian Callh"
      user-mail-address "sebastian.callh@gmail.com")
#+end_src

** Localisation
#+begin_src emacs-lisp
(use-package! flyspell
  :init (setq ispell-dictionary "en_GB"))
(setq system-time-locale "C")
#+end_src

* Custom keybindings
#+begin_src emacs-lisp
(defun kill-current-buffer ()
  (interactive)
  (kill-buffer (current-buffer)))

(global-set-key (kbd "C-w") 'backward-kill-word)
(global-set-key (kbd "C-x k") 'kill-current-buffer)
(global-set-key (kbd "C-x C-k") 'kill-region)
(global-set-key (kbd "M-o") 'other-window)
(global-set-key (kbd "M-;") 'comment-dwim)
#+end_src

* Aesthetics

** Colour scheme
The aesthetic setup is done by specifying a /colour scheme/ which will be used within Emacs, but also propagated to external programs through tangling in  [[*Applications][Applications]].

#+begin_src emacs-lisp
(setq doom-theme 'doom-dark+)
#+end_src

#+begin_src emacs-lisp :noweb yes
(setq doom-font (font-spec :family "Fira Code" :size 16)
      doom-variable-pitch-font (font-spec :family "Fira Code")
      doom-unicode-font (font-spec :family "Fira Code")
      doom-big-font (font-spec :family "Fira Code" :size 28))
#+end_src

** Modeline
Currently running with Doom modeline.
#+begin_src emacs-lisp
(use-package! doom-modeline
  :config
  (setq doom-modeline-buffer-file-name-style 'buffer-name)
  (setq doom-modeline-buffer-encoding nil))
#+end_src


* Performance
  Also disable some packages in [[file:packages.el::;: Pemoved for performance reason][packages.el]].
#+begin_src emacs-lisp
(setq display-line-numbers-type 'nil)
#+end_src

* Org
#+begin_src emacs-lisp
(use-package! org
  :init (setq org-directory "~/Dropbox/org")
  :config
  (setq org-startup-folded t)
  (setq org-hide-emphasis-markers t)
  (setq org-ellipsis '"…")
  (setq org-superstar-headline-bullets-list '("❍"))

  (custom-set-faces
   '(org-level-1 ((t (:inherit outline-1 :height 1.1))))
   '(org-level-2 ((t (:inherit outline-2 :height 1.08))))
   '(org-level-3 ((t (:inherit outline-3 :height 1.05))))
   '(org-level-4 ((t (:inherit outline-4 :height 1.02))))
   '(org-level-5 ((t (:inherit outline-5 :height 1.0))))))
#+end_src


** Roam
#+begin_src emacs-lisp
(use-package! org-roam
  :after (org)
  :hook (after-init . org-roam-mode)
  :custom (org-roam-directory (concat org-directory "/roam")))
#+end_src


** Babel
#+begin_src emacs-lisp
(require 'org-tempo)
(setq org-confirm-babel-evaluate nil)

(add-to-list 'org-structure-template-alist '("py" . "src python"))
(add-to-list 'org-structure-template-alist '("ipy" . "src jupyter-python"))
(add-to-list 'org-structure-template-alist '("jl" . "src julia"))
(add-to-list 'org-structure-template-alist '("ijl" . "src jupyter-julia"))
(add-to-list 'org-structure-template-alist '("el" . "src emacs-lisp"))
(add-to-list 'org-structure-template-alist '("sh". "src sh"))

;; (after! org-src
;;   (org-babel-do-load-languages
;;    'org-babel-load-languages
;;    '((emacs-lisp . t)
;;      (julia . t)
;;      (python . t)
;;      (jupyter . t))))
#+end_src

** Org elegant agenda
#+begin_src emacs-lisp
(use-package! elegant-agenda-mode
  :hook org-agenda-mode-hook)
#+end_src

* Packages
Most packages come bundled with Doom, but we make a few tweaks to the [[./packages.el][packages.el]] file.

#+begin_src emacs-lisp :tangle ~/.doom.d/packages.el

;; Added packages
(package! mixed-pitch)
(package! company-posframe)
(package! scroll-on-jump)
(package! with-venv)
(package! polymode)
(package! elegant-agenda-mode)

;; Currently requires manual install
(package! lsp-julia :recipe (:host github :repo "non-jedi/lsp-julia"))

                                        ;: Disabled
(package! solaire-mode :disable t)
#+end_src

** Dired
Regular Dired mode shows so much stuff and seeing my name on folders twice really clutters the screen. Hence we turn off detail mode by default.

#+begin_src emacs-lisp
(use-package! dired
  :config
  (add-hook 'dired-mode-hook 'dired-hide-details-mode))
#+end_src

** Avy
#+begin_src emacs-lisp
(use-package! avy
  :config
  (setq avy-all-windows t)
  (global-set-key (kbd "C-:") 'avy-goto-char))
#+end_src

** Tramp
We want to avoid [[https://www.reddit.com/r/emacs/comments/320cvb/projectile_slows_tramp_mode_to_a_crawl_is_there_a/][Projectile slowing down Tramp]], and we use some of the [[https://www.gnu.org/software/emacs/manual/html_node/tramp/Frequently-Asked-Questions.html][tricks in the Emacs manual]].
#+begin_src emacs-lisp
(after! tramp
  :config
  (setq recentf-auto-cleanup 'never)
  (setq projectile-mode-line "Projectile")
  (setq tramp-completion-reread-directory-timeout nil)
  (setq tramp-verbose 1)
  (setq vc-ignore-dir-regexp
        (format "\\(%s\\)\\|\\(%s\\)"
                vc-ignore-dir-regexp
                tramp-file-name-regexp)))
#+end_src

** Projectile
Solves the [[https://github.com/bbatsov/projectile/issues/657][issue]] where ~Projectile~ lags over ~Tramp~.
#+begin_src emacs-lisp
(use-package! projectile
  :config
  (setq projectile-mode-line "Projectile"))
#+end_src

** Company
#+begin_src emacs-lisp
(use-package! company
  :config
  (setq company-idle-delay .3))
#+end_src


*** Company-posframe
[[*Font][Mixed pitch]] allows different fonts in org mode for prose and code, however, this doesn't interact super great with company. [[https://github.com/tumashu/company-posframe/][Company-posframe]] solves this. [[https://github.com/sebastiencs/company-box][Company-box]] looks quite a bit nicer with icons and docstring-popup, but it crashes when used in ~emacs-jupyter~, and is also quite laggy. Added in [[file:packages.el::package! company-posframe][package.el]].

#+begin_src emacs-lisp
;; (use-package! company-posframe
;;   :hook (company-mode . company-posframe-mode))
#+end_src

**  Undo-fu
I think there might be an issue with ~undo-fu-session~ since it sometimes outputs =Undo-Fu-Session discarding undo data: file length mismatch=. I am not sure if this affects performance but I don't really care if undo is bounded by a session, so it is disabled here.
#+begin_src emacs-lisp
(remove-hook 'undo-fu-mode-hook #'global-undo-fu-session-mode)
#+end_src

* Programming
** Data science
*** Ess
Unfortunately [[https://github.com/gjkerns/ob-julia/blob/master/ob-julia-doc.org][needed]] for ~ob-julia~.
#+begin_src emacs-lisp
(after! ess
  (setq inferior-julia-program "/usr/local/bin/julia"))
#+end_src

*** Julia
Config can be in the Julia module [[https://github.com/hlissner/doom-emacs/blob/develop/modules/lang/julia/README.org][README]]. ~julia-lsp~ installed in [[file:packages.el::package! lsp-julia :recipe (:host github :repo "non-jedi/lsp-julia")][package.el]]. Needs ~lsp-enable-folding~ or it breaks for some reason.
#+begin_src emacs-lisp
(setq lsp-enable-folding t)
#+end_src

*** Python
#+begin_src emacs-lisp
(defun dap-python--pyenv-executable-find (command)
  (with-venv (executable-find "python")))
#+end_src

*** EIN
For some reason undo is disabled by default, so we enable it.  We also enable inline images.
#+begin_src emacs-lisp
(use-package! ein
  :config
  (setq ein:worksheet-enable-undo t)
  (setq ein:output-area-inlined-images t)
  (setq ein:polymode t)
  (setq ein:completion-backend 'ein:use-company-backend))
#+end_src
